peripheral {
  name = "WB-FMC-ADC-Core    ";
  vendor_id = "000000000000a1ba";
  device_id = "00000608";
  version   = "00000003";
  date      = "20160304";
  description = "Wishbone slave for FMC ADC 18bits 400kS/s core";
  hdl_entity = "fmc_adc_18b_400ks_csr";

  prefix = "fmc_adc_core";

  reg {
    name = "Control register";
    prefix = "ctl";
   
    field {
      name = "Trigger ID";
      description = "Is the trigger ID that starts the adquisition.";
      prefix = "TRIGID";
      type = SLV;
      size = 8;
      align = 8;
      access_bus = READ_WRITE;
      access_dev = READ_ONLY;
    };
    
    field {
      name = "Reset ADC";
      description = "When this bit is set to 1 is done a Reset ADC and flags";
      prefix = "RST";
      type = MONOSTABLE;
      size = 1;
      access_bus = READ_WRITE;
      access_dev = READ_ONLY;
    };	
	
    field {
      name = "Adquisition mode. On TimeStampMode the 24-bits less significative of harmony message with the triggerID are the time when adquisiton will be triggered.";
      description = "0: Continious adquisition\n1: On trigger\n2: TimeStamp\n3: no defined";
      prefix = "adq_m";
      type = SLV;
      size = 2;
      access_bus = READ_WRITE;
      access_dev = READ_ONLY;
    };    
        
    field {
      name = "Range";
      description = "ADC voltage range:\n0: +/-5V\n1: +/-10V (default)";
      prefix = "range";
      type = BIT;
      access_bus = READ_WRITE;
      access_dev = READ_ONLY;
    };

    field {
      name = "Oversampling Mode";
      description = "0: No oversampling\n1: 2\n2: 4\n3: 8\n4: 16\n5: 32\n6: 64\n7: Invalid";
      prefix = "adc_os";
      type = SLV;
      size = 3;
      access_bus = READ_WRITE;
      access_dev = READ_ONLY;
    };

    field {
      name = "not Double Rate Input";
      description = "Sampling of adc (it is recomended to set to 1 only with adc_os=0, see datasheet)\n1: Sampling at 200kS/s\n0: Sampling at 400kS/s";
      prefix = "dbl_rate";
      type = BIT;
      access_bus = READ_WRITE;
      access_dev = READ_ONLY;
    };
	
	field {
      name = "Read In Conversion";
      description = "when '1' it allows the possibility to read while conversion is running.";
      prefix = "ric";
      type = BIT;
      access_bus = READ_WRITE;
      access_dev = READ_ONLY;
    };

    field {
      name = "State machine status";
      description = "States:\n0: ADC_RST\n1&5: IDLE\n2&6: inConversion\n3&7: reading\n8: illegal";
      prefix = "adc_fsm";
      type = SLV;
      size = 3;
      access_bus = READ_ONLY;
      access_dev = WRITE_ONLY;
    };
    
    field {
      name = "ADC FIFO overflow";
      description = "ADC FIFO has and overflow";
      prefix = "fifo_of";
     type = BIT;
      access_bus = READ_ONLY;
      access_dev = WRITE_ONLY;
    };
	
	field {
      name = "Trigger error";
      description = "Trigger tried to send but adc was not ready.";
      prefix = "Trig_err";
     type = BIT;
      access_bus = READ_ONLY;
      access_dev = WRITE_ONLY;
    };
  };

    reg {
    name = "ADC Chanel 1";
    prefix = "adc_ch1";

    field {
      name = "ADC Chanel1";
      description = "Reading of channel 1 of 18bit ADC AD7806";
      type = SLV;
      size = 32;
      access_bus = READ_ONLY;
      access_dev = WRITE_ONLY;
    };
  };

    reg {
    name = "ADC Chanel 2";
    prefix = "adc_ch2";

    field {
      name = "ADC Chanel2";
      description = "Reading of channel 2 of 18bit ADC AD7806";
      type = SLV;
      size = 32;
      access_bus = READ_ONLY;
      access_dev = WRITE_ONLY;
    };
  };
  
    reg {
    name = "ADC Chanel 3";
    prefix = "adc_ch3";

    field {
      name = "ADC Chanel3";
      description = "Reading of channel 3 of 18bit ADC AD7806";
      type = SLV;
      size = 32;
      access_bus = READ_ONLY;
      access_dev = WRITE_ONLY;
    };
  };
  
    reg {
    name = "ADC Chanel 4";
    prefix = "adc_ch4";

    field {
      name = "ADC Chanel4";
      description = "Reading of channel 4 of 18bit ADC AD7806";
      type = SLV;
      size = 32;
      access_bus = READ_ONLY;
      access_dev = WRITE_ONLY;
    };
  };
  
  reg {
    name = "ADC Chanel 5";
    prefix = "adc_ch5";

    field {
      name = "ADC Chanel5";
      description = "Reading of channel 5 of 18bit ADC AD7806";
      type = SLV;
      size = 32;
      access_bus = READ_ONLY;
      access_dev = WRITE_ONLY;
    };
  };

    reg {
    name = "ADC Chanel 6";
    prefix = "adc_ch6";

    field {
      name = "ADC Chanel6";
      description = "Reading of channel 6 of 18bit ADC AD7806";
      type = SLV;
      size = 32;
      access_bus = READ_ONLY;
      access_dev = WRITE_ONLY;
    };
  };
  
    reg {
    name = "ADC Chanel 7";
    prefix = "adc_ch7";

    field {
      name = "ADC Chanel7";
      description = "Reading of channel 7 of 18bit ADC AD7806";
      type = SLV;
      size = 32;
      access_bus = READ_ONLY;
      access_dev = WRITE_ONLY;
    };
  };
  
    reg {
    name = "ADC Chanel 8";
    prefix = "adc_ch8";

    field {
      name = "ADC Chanel8";
      description = "Reading of channel 8 of 18bit ADC AD7806";
      type = SLV;
      size = 32;
      access_bus = READ_ONLY;
      access_dev = WRITE_ONLY;
    };
  };
  
  reg {
    name = "Samples counter";
    prefix = "samples_cnt";

    field {
      name = "Samples counter";
      description = "Counts the number of samples.\n It is reset on START and then counts the number of pre-trigger + post-trigger samples";
      type = SLV;
      size = 32;
      access_bus = READ_ONLY;
      access_dev = WRITE_ONLY;
    };
  };

  reg {
    name = "ID assignation";
    prefix = "ID";
    
    field {
      name = "Cha1 ID";
      description = "ID used to send the data adquiered on Channel 1. If it is 0 no data is generated.";
      prefix = "CH1_ID";
      type = SLV;
      size = 8;
      align = 8;
      access_bus = READ_WRITE;
      access_dev = READ_ONLY;
    };
    
    field {
      name = "Cha2 ID";
      description = "ID used to send the data adquiered on Channel 2. If it is 0 no data is generated.";
      prefix = "CH2_ID";
      type = SLV;
      size = 8;
      align = 8;
      access_bus = READ_WRITE;
      access_dev = READ_ONLY;
    };
    
    field {
      name = "Cha3 ID";
      description = "ID used to send the data adquiered on Channel 3. If it is 0 no data is generated.";
      prefix = "CH3_ID";
      type = SLV;
      size = 8;
      align = 8;
      access_bus = READ_WRITE;
      access_dev = READ_ONLY;
    };
    
    field {
      name = "Cha4 ID";
      description = "ID used to send the data adquiered on Channel 4. If it is 0 no data is generated.";
      prefix = "CH4_ID";
      type = SLV;
      size = 8;
      align = 8;
      access_bus = READ_WRITE;
      access_dev = READ_ONLY;
    };
  };

};
