peripheral {
  name = "WB-HRMY-AVERAGE    ";
  vendor_id = "000000000000a1ba";
  device_id = "b379b5a4";
  version   = "00000002";
  date      = "20160926";
  description = "This block is though to calculate the dynamic mean of data in 32-bit 2-Complement format.";
  hdl_entity = "hrmy_average_block_csr";

  prefix = "avg_block";
    
    reg {
    name = "Average Block Control Register";
    prefix = "avg_ctl";
         
        field {
      name = "PRE_DIV";
      description = "This bit indicates the number of bits that output is shifted respect to acomulator register.";
      prefix = "PRE_DIV";
      type = SLV;
      size = 5;
      access_bus = READ_WRITE;
      access_dev = READ_ONLY;
    };

    field {
      name = "Enable Output";
      description = "These bits indicates, when output data will be generated.\n 00: Data is send for each ID_IP or ID_IN is received.\n 01: Data is send after receive a positive input. \n 10: Data is send after receive a negative input. \n 11: Data is send after receive both positive and negative inputs.";
      prefix = "ENA";
      type = SLV;
      size = 2;
      access_bus = READ_WRITE;
      access_dev = READ_ONLY;
    };

    field {
      name = "Acumulator overflow";
      description = "This bit indicates that FIFO is full and it is ready to send output data.";
      prefix = "AOF";
      type = BIT;
      size = 1;
      access_bus = READ_ONLY;
      access_dev = WRITE_ONLY;
    };
    
    field {
      name = "Output overflow";
      description = "This bit indicates that acoumulator has a bigger value than the output send.";
      prefix = "OOF";
      type = BIT;
      size = 1;
      access_bus = READ_ONLY;
      access_dev = WRITE_ONLY;
    };
    
	field {
      name = "Average Reset";
      description = "Resets the acomulator registers to 0 and clear the flags Acumulator overflow and Output overflow";
      prefix = "wb_Rst";
      type = MONOSTABLE;
      size = 1;
      access_bus = WRITE_ONLY;
      access_dev = READ_ONLY;
    }; 

  };
  
  reg {
    name = "ID config";
    prefix = "ID_CFG";
     
     field {
      name = "Input ID POSITIVE";
      description = "This is the ID data that will be added at the acomulator. If it is set to 0 no data is added.";
      prefix = "ID_IP";
      type = SLV;
      size = 8;
      align = 8;
      access_bus = READ_WRITE;
      access_dev = READ_ONLY;
    };
    
    field {
      name = "Input ID NEGATIVE";
      description = "This is the ID data that will be substracted at the acomulator. If it is set to 0 no data is sustracted.";
      prefix = "ID_IN";
      type = SLV;
      size = 8;
      align = 8;
      access_bus = READ_WRITE;
      access_dev = READ_ONLY;
    };
    
    field {
      name = "Output ID";
      description = "This is the ID of the output data generated the Timestamp of Output is the timestamp of the last input. If it is set to 0 no data is generated.";
      prefix = "ID_OUT";
      type = SLV;
      size = 8;
      align = 8;
      access_bus = READ_WRITE;
      access_dev = READ_ONLY;
    };
  };
  
  reg {
    name = "Acomulator value high";
    prefix = "ACC_H";
     
     field {
      name = "ACC_HIGH";
      description = "Value of accomulator internal register, high part.";
      prefix = "H";
      type = SLV;
      size = 32;
      access_bus = READ_ONLY;
      access_dev = WRITE_ONLY;
    };
  };
	
  reg {
    name = "Acomulator value low";
    prefix = "ACC_L";
     
     field {
      name = "ACC_LOW";
      description = "Value of accomulator internal register, low part.";
      prefix = "L";
      type = SLV;
      size = 32;
      access_bus = READ_ONLY;
      access_dev = WRITE_ONLY;
    };	
  };
};
